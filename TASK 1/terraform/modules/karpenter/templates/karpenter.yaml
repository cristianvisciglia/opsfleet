#SOME VALUES ARE TO SIMPLIFLY CODE

apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: x86-nodeclass
spec:
  # AMI selection para x86
  amiSelectorTerms:
    - alias: al2023@latest
  role: "$NODE_ROLE"

  # Security groups
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "$CLUSTER_NAME"

  # Subnets
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "$CLUSTER_NAME"

  # User data para x86
  userData: |
    #!/bin/bash
    /etc/eks/bootstrap.sh $CLUSTER_NAME

  # Block device mappings
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 20Gi
        volumeType: gp3
        deleteOnTermination: true

---

    apiVersion: karpenter.k8s.aws/v1
    kind: EC2NodeClass
    metadata:
      name: graviton-nodeclass
    spec:
      # AMI para ARM64
      amiSelectorTerms:
        - alias: al2023@latest

      # Instance profile IAM
      role: "$NODE_ROLE"
      
      # Security groups
      securityGroupSelectorTerms:
        - tags:
            karpenter.sh/discovery: "$CLUSTER_NAME"
      
      # Subnets
      subnetSelectorTerms:
        - tags:
            karpenter.sh/discovery: "$CLUSTER_NAME"
      
      userData: |
        #!/bin/bash
        /etc/eks/bootstrap.sh $CLUSTER_NAME
      
      # Block device mappings
      blockDeviceMappings:
        - deviceName: /dev/xvda
          ebs:
            volumeSize: 20Gi
            volumeType: gp3
            deleteOnTermination: true

---

  apiVersion: karpenter.sh/v1
  kind: NodePool
  metadata:
    name: x86-nodepool
  spec:
    limits:
      cpu: 1000
      memory: 1000Gi

    template:
      metadata:
        labels:
          nodepool: "x86"
          arch: "amd64"
      spec:
        nodeClassRef:
          group: karpenter.k8s.aws
          kind: EC2NodeClass
          name: x86-nodeclass

        requirements:
          - key: kubernetes.io/arch
            operator: In
            values: ["amd64"]
          - key: node.kubernetes.io/instance-type
            operator: In
            values:
              - "m5.large"
              - "m5.xlarge"
              - "m5.2xlarge"
              - "m5.4xlarge"
              - "c5.large"
              - "c5.xlarge"
              - "c5.2xlarge"
              - "c5.4xlarge"
              - "r5.large"
              - "r5.xlarge"
              - "r5.2xlarge"
          - key: karpenter.sh/capacity-type
            operator: In
            values: ["spot"]

        terminationGracePeriod: 30s

---

  apiVersion: karpenter.sh/v1
  kind: NodePool
  metadata:
    name: graviton-nodepool
  spec:
    limits:
      cpu: 1000
      memory: 1000Gi
    
    template:
      metadata:
        labels:
          nodepool: "graviton"
          arch: "arm64"
      spec:
        nodeClassRef:
          group: karpenter.k8s.aws
          kind: EC2NodeClass
          name: graviton-nodeclass
        
        requirements:
          - key: kubernetes.io/arch
            operator: In
            values: ["arm64"]
          - key: node.kubernetes.io/instance-type
            operator: In
            values: 
              - "m6g.medium"
              - "m6g.large"
              - "m6g.xlarge"
              - "m6g.2xlarge"
              - "m6g.4xlarge"
              - "c6g.medium"
              - "c6g.large"
              - "c6g.xlarge"
              - "c6g.2xlarge"
              - "c6g.4xlarge"
              - "r6g.medium"
              - "r6g.large"
              - "r6g.xlarge"
              - "r6g.2xlarge"
          - key: karpenter.sh/capacity-type
            operator: In
            values: ["spot"]
        terminationGracePeriod: 30s
